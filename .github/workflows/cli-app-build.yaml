name: wheels

on:
  push:
    tags:
      # 'v[0-9]+.[0-9]+.[0-9]+' to match semantic version tag, e.g. v2.0.8
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

jobs:
  build:
    name: build command line interfaces for ${{ matrix.platform || matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
      - uses: actions/checkout@v3

      - name: set up rust
        if: matrix.os != 'ubuntu'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable 
          override: true
      
      - name: set up rust for ubuntu
        if: matrix.os == 'ubuntu'
        bash: >
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
          rustup show

      - run: rustup target add aarch64-apple-darwin
        if: matrix.os == 'macos'

      - name: run cargo tests
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable 
          override: true

      - run: cd rust/ && cargo test

      - name: build ${{ matrix.platform || matrix.os }} binaries
        run: cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp3${{ matrix.python-version }}-*"
          CIBW_SKIP: "*-win32 *-musllinux* *i686 *ppc64le *s390x *aarch64"
          CIBW_PLATFORM: ${{ matrix.platform || matrix.os }}
          # TODO: why doesn't pytest work with cibuildwheel?
          # CIBW_TEST_COMMAND: "pytest -v {project}/python/fastsim/tests"
          CIBW_TEST_COMMAND: "python -m unittest discover {project}/python/fastsim/tests"
          CIBW_ARCHS_MACOS: 'universal2'
          # see https://cibuildwheel.readthedocs.io/en/stable/faq/#universal2
          CIBW_TEST_SKIP: '*_universal2:arm64'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2014"
          CIBW_BEFORE_BUILD: >
            pip install -U setuptools-rust &&
            rustup default stable &&
            rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            pip install -U setuptools-rust &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup show

      # - name: build windows 32bit binaries
      #   if: matrix.os == 'windows'
      #   run: cibuildwheel --output-dir dist
      #   env:
      #     CIBW_BUILD: 'cp3${{ matrix.python-version }}-win32'
      #     CIBW_PLATFORM: windows
      #     CIBW_TEST_REQUIRES: 'pytest'
      #     CIBW_TEST_COMMAND: 'pytest {project}/tests -s'
      #     CIBW_ENVIRONMENT: 'PATH="$UserProfile\.cargo\bin;$PATH"'
      #     CIBW_BEFORE_BUILD: >
      #       pip install -U setuptools-rust &&
      #       rustup toolchain install nightly-i686-pc-windows-msvc &&
      #       rustup default nightly-i686-pc-windows-msvc &&
      #       rustup override set nightly-i686-pc-windows-msvc &&
      #       rustup show

      - name: list dist files
        run: ${{ matrix.ls || 'ls -lh' }} dist/

      - uses: actions/upload-artifact@v3
        with:
          path: ./target/release/
