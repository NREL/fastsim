name: wheels

on:
  push:
    tags:
    # 'v[0-9]+.[0-9]+.[0-9]+' to match e.g. v2.0.9
      - "v[0-9]+.[0-9]+.[0-9]+" 

jobs:
  build:
    name: build py3.${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        python-version:
          - "8"
          - "9"
          - "10"
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: set up rust
        if: matrix.os != 'ubuntu'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

    - run: rustup target add aarch64-apple-darwin
      if: matrix.os == 'macos'

    - name: install python dependencies
      run: pip install -U setuptools wheel twine cibuildwheel

    - name: build sdist
      if: matrix.os == 'ubuntu' && matrix.python-version == '8'
      run: |
        pip install -U setuptools-rust
        python setup.py sdist
    - name: build ${{ matrix.platform || matrix.os }} binaries
      run: cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: 'cp3${{ matrix.python-version }}-*'
        CIBW_SKIP: '*-win32 *-musllinux* *i686 *ppc64le *s390x *aarch64'
        CIBW_PLATFORM: ${{ matrix.platform || matrix.os }}
        CIBW_TEST_COMMAND: 'python -m unittest discover {project}'
        CIBW_ARCHS_MACOS: 'universal2'
        # see https://cibuildwheel.readthedocs.io/en/stable/faq/#universal2
        CIBW_TEST_SKIP: '*_universal2:arm64'
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_MANYLINUX_X86_64_IMAGE: 'manylinux2014'
        CIBW_MANYLINUX_I686_IMAGE: 'manylinux2014'
        CIBW_BEFORE_BUILD: >
          pip install -U setuptools-rust &&
          rustup default nightly &&
          rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          pip install -U setuptools-rust &&
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
          rustup show

    - name: list dist files
      run: ${{ matrix.ls || 'ls -lh' }} dist/

      - uses: actions/upload-artifact@v3
        with:
          path:  ./dist/*

    - name: Copy built wheels to release
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist/*
    - name: Download the release created from this tag
      id: download-release
      uses: actions/download-artifact@v3
      with:
        name: ${{ github.ref }}
        path: release.zip
        if-no-files-found: error
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Unzip release artifacts
      run: unzip release.zip
      if: steps.download-release.outputs.artifacts_downloaded == 'true'
    - name: Upload wheels to release
      uses: ncipollo/release-action@v3
      with:
        artifacts: ./dist/*
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
