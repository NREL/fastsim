name: wheels 

on:
  push:
      branches: [ ndr/test-m1-wheel ]

# on:
#   push:
#     tags:
#       - '[0-9]+.[0-9]+.[0-9]+'  # '[0-9]+.[0-9]+.[0-9]+' to match e.g. 2.0.8

jobs:
  build:
    name: build py3.${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        # - ubuntu
        - macos
        # - windows
        python-version:
        - '8'
        - '9'
        - '10'
        # include:
        # - os: ubuntu
        #   platform: linux
        # - os: windows
        #   ls: dir

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: set up rust
      if: matrix.os != 'ubuntu'
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - name: install python dependencies
      run: pip install -U setuptools wheel twine cibuildwheel

    # - name: build sdist
    #   if: matrix.os == 'ubuntu' && matrix.python-version == '8'
    #   run: |
    #     pip install -U setuptools-rust
    #     python setup.py sdist
    - name: build ${{ matrix.platform || matrix.os }} binaries
      run: cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: 'cp3${{ matrix.python-version }}-*'
        CIBW_SKIP: '*-win32 *-musllinux* *i686 *ppc64le *s390x *aarch64'
        CIBW_PLATFORM: ${{ matrix.platform || matrix.os }}
        CIBW_TEST_COMMAND: 'python -m unittest discover {project}'
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_MANYLINUX_X86_64_IMAGE: 'manylinux2014'
        CIBW_MANYLINUX_I686_IMAGE: 'manylinux2014'
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_BEFORE_BUILD: >
          pip install -U setuptools-rust &&
          rustup default nightly &&
          rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          pip install -U setuptools-rust &&
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
          rustup show
    # - name: build windows 32bit binaries
    #   if: matrix.os == 'windows'
    #   run: cibuildwheel --output-dir dist
    #   env:
    #     CIBW_BUILD: 'cp3${{ matrix.python-version }}-win32'
    #     CIBW_PLATFORM: windows
    #     CIBW_TEST_REQUIRES: 'pytest'
    #     CIBW_TEST_COMMAND: 'pytest {project}/tests -s'
    #     CIBW_ENVIRONMENT: 'PATH="$UserProfile\.cargo\bin;$PATH"'
    #     CIBW_BEFORE_BUILD: >
    #       pip install -U setuptools-rust &&
    #       rustup toolchain install nightly-i686-pc-windows-msvc &&
    #       rustup default nightly-i686-pc-windows-msvc &&
    #       rustup override set nightly-i686-pc-windows-msvc &&
    #       rustup show
    - name: list dist files
      run: ${{ matrix.ls || 'ls -lh' }} dist/

    - uses: actions/upload-artifact@v3
      with:
        path: ./dist/*
